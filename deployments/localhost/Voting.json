{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_voters",
          "type": "address[]"
        }
      ],
      "name": "addVoters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "choices",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "createBallot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ballotId",
          "type": "uint256"
        }
      ],
      "name": "result",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.Choice[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ballotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "choiceId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf23ca3ffe95dd562f30bd5a9d3ee4827728feffe0e215f975823cc19e6ee8889",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1298190",
    "logsBloom": "0x
    "blockHash": "0x626f9c1f5773215113e2278b5486d96ea3ed6a82ec2916d00329e08193204cd2",
    "transactionHash": "0xf23ca3ffe95dd562f30bd5a9d3ee4827728feffe0e215f975823cc19e6ee8889",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1298190",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8d07666112aef9018d231c22b3b87c8a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_voters\",\"type\":\"address[]\"}],\"name\":\"addVoters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"choices\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"createBallot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ballotId\",\"type\":\"uint256\"}],\"name\":\"result\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Choice[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ballotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"choiceId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Voting.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\ncontract Voting {\\n    mapping(address => bool) public voters;\\n    struct Choice {\\n        uint256 id;\\n        string name;\\n        uint256 votes;\\n    }\\n    struct Ballot {\\n        uint256 id;\\n        string name;\\n        Choice[] choices;\\n        uint256 end;\\n    }\\n    mapping(uint256 => Ballot) ballots;\\n    uint256 nextBallotId;\\n    address public admin;\\n    mapping(address => mapping(uint256 => bool)) public votes;\\n\\n    constructor() {\\n        admin = msg.sender;\\n    }\\n\\n    function addVoters(address[] calldata _voters) external onlyAdmin {\\n        for (uint256 i = 0; i < _voters.length; i++) {\\n            voters[_voters[i]] = true;\\n        }\\n    }\\n\\n    function createBallot(\\n        string memory name,\\n        string[] memory choices,\\n        uint256 offset\\n    ) public onlyAdmin {\\n        ballots[nextBallotId].id = nextBallotId;\\n        ballots[nextBallotId].name = name;\\n        ballots[nextBallotId].end = block.timestamp + offset;\\n        for (uint256 i = 0; i < choices.length; i++) {\\n            ballots[nextBallotId].choices.push(Choice(i, choices[i], 0));\\n        }\\n        nextBallotId++;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"only admin\\\");\\n        _;\\n    }\\n\\n    function vote(uint256 ballotId, uint256 choiceId) external {\\n        require(voters[msg.sender] == true, \\\"only voters can vote\\\");\\n        require(\\n            votes[msg.sender][ballotId] == false,\\n            \\\"voter can only vote once\\\"\\n        );\\n        require(\\n            block.timestamp < ballots[ballotId].end,\\n            \\\"can only vote until ballot end date\\\"\\n        );\\n        votes[msg.sender][ballotId] = true;\\n        ballots[ballotId].choices[choiceId].votes++;\\n    }\\n\\n    function result(uint256 ballotId) external view returns (Choice[] memory) {\\n        require(\\n            block.timestamp >= ballots[ballotId].end,\\n            \\\"cannot see the ballot result before ballot end\\\"\\n        );\\n        return ballots[ballotId].choices;\\n    }\\n}\\n\",\"keccak256\":\"0x8f474d34348f1dbe18711a27e2d21f742c60237a6a17c3c7287cb7881da8bb11\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611632806100616000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639f2524ee1161005b5780639f2524ee146100ea578063a3ec138d1461011a578063b384abef1461014a578063f851a440146101665761007d565b806320faae8e146100825780633c5940591461009e5780638203373a146100ce575b600080fd5b61009c60048036038101906100979190610b3e565b610184565b005b6100b860048036038101906100b39190610bc9565b610361565b6040516100c59190610d96565b60405180910390f35b6100e860048036038101906100e39190610e13565b6104d5565b005b61010460048036038101906100ff9190610ebe565b610609565b6040516101119190610f19565b60405180910390f35b610134600480360381019061012f9190610f34565b610638565b6040516101419190610f19565b60405180910390f35b610164600480360381019061015f9190610f61565b610658565b005b61016e6108a2565b60405161017b9190610fb0565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90611028565b60405180910390fd5b600254600160006002548152602001908152602001600020600001819055508260016000600254815260200190815260200160002060010190816102589190611254565b5080426102659190611355565b6001600060025481526020019081526020016000206003018190555060005b82518110156103435760016000600254815260200190815260200160002060020160405180606001604052808381526020018584815181106102c9576102c8611389565b5b60200260200101518152602001600081525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190816103239190611254565b50604082015181600201555050808061033b906113b8565b915050610284565b5060026000815480929190610357906113b8565b9190505550505050565b606060016000838152602001908152602001600020600301544210156103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390611472565b60405180910390fd5b60016000838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b828210156104ca57838290600052602060002090600302016040518060600160405290816000820154815260200160018201805461042f90611077565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90611077565b80156104a85780601f1061047d576101008083540402835291602001916104a8565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b50505050508152602001600282015481525050815260200190600101906103f2565b505050509050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90611028565b60405180910390fd5b60005b8282905081101561060457600160008085858581811061058b5761058a611389565b5b90506020020160208101906105a09190610f34565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806105fc906113b8565b915050610568565b505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60006020528060005260406000206000915054906101000a900460ff1681565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e1906114de565b60405180910390fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff1615151461078e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107859061154a565b60405180910390fd5b600160008381526020019081526020016000206003015442106107e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dd906115dc565b60405180910390fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000838152602001908152602001600020600201818154811061087757610876611389565b5b90600052602060002090600302016002016000815480929190610899906113b8565b91905055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61092f826108e6565b810181811067ffffffffffffffff8211171561094e5761094d6108f7565b5b80604052505050565b60006109616108c8565b905061096d8282610926565b919050565b600067ffffffffffffffff82111561098d5761098c6108f7565b5b610996826108e6565b9050602081019050919050565b82818337600083830152505050565b60006109c56109c084610972565b610957565b9050828152602081018484840111156109e1576109e06108e1565b5b6109ec8482856109a3565b509392505050565b600082601f830112610a0957610a086108dc565b5b8135610a198482602086016109b2565b91505092915050565b600067ffffffffffffffff821115610a3d57610a3c6108f7565b5b602082029050602081019050919050565b600080fd5b6000610a66610a6184610a22565b610957565b90508083825260208201905060208402830185811115610a8957610a88610a4e565b5b835b81811015610ad057803567ffffffffffffffff811115610aae57610aad6108dc565b5b808601610abb89826109f4565b85526020850194505050602081019050610a8b565b5050509392505050565b600082601f830112610aef57610aee6108dc565b5b8135610aff848260208601610a53565b91505092915050565b6000819050919050565b610b1b81610b08565b8114610b2657600080fd5b50565b600081359050610b3881610b12565b92915050565b600080600060608486031215610b5757610b566108d2565b5b600084013567ffffffffffffffff811115610b7557610b746108d7565b5b610b81868287016109f4565b935050602084013567ffffffffffffffff811115610ba257610ba16108d7565b5b610bae86828701610ada565b9250506040610bbf86828701610b29565b9150509250925092565b600060208284031215610bdf57610bde6108d2565b5b6000610bed84828501610b29565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c2b81610b08565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c6b578082015181840152602081019050610c50565b60008484015250505050565b6000610c8282610c31565b610c8c8185610c3c565b9350610c9c818560208601610c4d565b610ca5816108e6565b840191505092915050565b6000606083016000830151610cc86000860182610c22565b5060208301518482036020860152610ce08282610c77565b9150506040830151610cf56040860182610c22565b508091505092915050565b6000610d0c8383610cb0565b905092915050565b6000602082019050919050565b6000610d2c82610bf6565b610d368185610c01565b935083602082028501610d4885610c12565b8060005b85811015610d845784840389528151610d658582610d00565b9450610d7083610d14565b925060208a01995050600181019050610d4c565b50829750879550505050505092915050565b60006020820190508181036000830152610db08184610d21565b905092915050565b600080fd5b60008083601f840112610dd357610dd26108dc565b5b8235905067ffffffffffffffff811115610df057610def610db8565b5b602083019150836020820283011115610e0c57610e0b610a4e565b5b9250929050565b60008060208385031215610e2a57610e296108d2565b5b600083013567ffffffffffffffff811115610e4857610e476108d7565b5b610e5485828601610dbd565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8b82610e60565b9050919050565b610e9b81610e80565b8114610ea657600080fd5b50565b600081359050610eb881610e92565b92915050565b60008060408385031215610ed557610ed46108d2565b5b6000610ee385828601610ea9565b9250506020610ef485828601610b29565b9150509250929050565b60008115159050919050565b610f1381610efe565b82525050565b6000602082019050610f2e6000830184610f0a565b92915050565b600060208284031215610f4a57610f496108d2565b5b6000610f5884828501610ea9565b91505092915050565b60008060408385031215610f7857610f776108d2565b5b6000610f8685828601610b29565b9250506020610f9785828601610b29565b9150509250929050565b610faa81610e80565b82525050565b6000602082019050610fc56000830184610fa1565b92915050565b600082825260208201905092915050565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b6000611012600a83610fcb565b915061101d82610fdc565b602082019050919050565b6000602082019050818103600083015261104181611005565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061108f57607f821691505b6020821081036110a2576110a1611048565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261110a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110cd565b61111486836110cd565b95508019841693508086168417925050509392505050565b6000819050919050565b600061115161114c61114784610b08565b61112c565b610b08565b9050919050565b6000819050919050565b61116b83611136565b61117f61117782611158565b8484546110da565b825550505050565b600090565b611194611187565b61119f818484611162565b505050565b5b818110156111c3576111b860008261118c565b6001810190506111a5565b5050565b601f821115611208576111d9816110a8565b6111e2846110bd565b810160208510156111f1578190505b6112056111fd856110bd565b8301826111a4565b50505b505050565b600082821c905092915050565b600061122b6000198460080261120d565b1980831691505092915050565b6000611244838361121a565b9150826002028217905092915050565b61125d82610c31565b67ffffffffffffffff811115611276576112756108f7565b5b6112808254611077565b61128b8282856111c7565b600060209050601f8311600181146112be57600084156112ac578287015190505b6112b68582611238565b86555061131e565b601f1984166112cc866110a8565b60005b828110156112f4578489015182556001820191506020850194506020810190506112cf565b86831015611311578489015161130d601f89168261121a565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061136082610b08565b915061136b83610b08565b925082820190508082111561138357611382611326565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113c382610b08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113f5576113f4611326565b5b600182019050919050565b7f63616e6e6f7420736565207468652062616c6c6f7420726573756c742062656660008201527f6f72652062616c6c6f7420656e64000000000000000000000000000000000000602082015250565b600061145c602e83610fcb565b915061146782611400565b604082019050919050565b6000602082019050818103600083015261148b8161144f565b9050919050565b7f6f6e6c7920766f746572732063616e20766f7465000000000000000000000000600082015250565b60006114c8601483610fcb565b91506114d382611492565b602082019050919050565b600060208201905081810360008301526114f7816114bb565b9050919050565b7f766f7465722063616e206f6e6c7920766f7465206f6e63650000000000000000600082015250565b6000611534601883610fcb565b915061153f826114fe565b602082019050919050565b6000602082019050818103600083015261156381611527565b9050919050565b7f63616e206f6e6c7920766f746520756e74696c2062616c6c6f7420656e64206460008201527f6174650000000000000000000000000000000000000000000000000000000000602082015250565b60006115c6602383610fcb565b91506115d18261156a565b604082019050919050565b600060208201905081810360008301526115f5816115b9565b905091905056fea2646970667358221220ec42f02999d30ad092caa1fba7844df531973aa8b46d74b3766343d27015cdbb64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80639f2524ee1161005b5780639f2524ee146100ea578063a3ec138d1461011a578063b384abef1461014a578063f851a440146101665761007d565b806320faae8e146100825780633c5940591461009e5780638203373a146100ce575b600080fd5b61009c60048036038101906100979190610b3e565b610184565b005b6100b860048036038101906100b39190610bc9565b610361565b6040516100c59190610d96565b60405180910390f35b6100e860048036038101906100e39190610e13565b6104d5565b005b61010460048036038101906100ff9190610ebe565b610609565b6040516101119190610f19565b60405180910390f35b610134600480360381019061012f9190610f34565b610638565b6040516101419190610f19565b60405180910390f35b610164600480360381019061015f9190610f61565b610658565b005b61016e6108a2565b60405161017b9190610fb0565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90611028565b60405180910390fd5b600254600160006002548152602001908152602001600020600001819055508260016000600254815260200190815260200160002060010190816102589190611254565b5080426102659190611355565b6001600060025481526020019081526020016000206003018190555060005b82518110156103435760016000600254815260200190815260200160002060020160405180606001604052808381526020018584815181106102c9576102c8611389565b5b60200260200101518152602001600081525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190816103239190611254565b50604082015181600201555050808061033b906113b8565b915050610284565b5060026000815480929190610357906113b8565b9190505550505050565b606060016000838152602001908152602001600020600301544210156103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390611472565b60405180910390fd5b60016000838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b828210156104ca57838290600052602060002090600302016040518060600160405290816000820154815260200160018201805461042f90611077565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90611077565b80156104a85780601f1061047d576101008083540402835291602001916104a8565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b50505050508152602001600282015481525050815260200190600101906103f2565b505050509050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90611028565b60405180910390fd5b60005b8282905081101561060457600160008085858581811061058b5761058a611389565b5b90506020020160208101906105a09190610f34565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806105fc906113b8565b915050610568565b505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60006020528060005260406000206000915054906101000a900460ff1681565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e1906114de565b60405180910390fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff1615151461078e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107859061154a565b60405180910390fd5b600160008381526020019081526020016000206003015442106107e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dd906115dc565b60405180910390fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000838152602001908152602001600020600201818154811061087757610876611389565b5b90600052602060002090600302016002016000815480929190610899906113b8565b91905055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61092f826108e6565b810181811067ffffffffffffffff8211171561094e5761094d6108f7565b5b80604052505050565b60006109616108c8565b905061096d8282610926565b919050565b600067ffffffffffffffff82111561098d5761098c6108f7565b5b610996826108e6565b9050602081019050919050565b82818337600083830152505050565b60006109c56109c084610972565b610957565b9050828152602081018484840111156109e1576109e06108e1565b5b6109ec8482856109a3565b509392505050565b600082601f830112610a0957610a086108dc565b5b8135610a198482602086016109b2565b91505092915050565b600067ffffffffffffffff821115610a3d57610a3c6108f7565b5b602082029050602081019050919050565b600080fd5b6000610a66610a6184610a22565b610957565b90508083825260208201905060208402830185811115610a8957610a88610a4e565b5b835b81811015610ad057803567ffffffffffffffff811115610aae57610aad6108dc565b5b808601610abb89826109f4565b85526020850194505050602081019050610a8b565b5050509392505050565b600082601f830112610aef57610aee6108dc565b5b8135610aff848260208601610a53565b91505092915050565b6000819050919050565b610b1b81610b08565b8114610b2657600080fd5b50565b600081359050610b3881610b12565b92915050565b600080600060608486031215610b5757610b566108d2565b5b600084013567ffffffffffffffff811115610b7557610b746108d7565b5b610b81868287016109f4565b935050602084013567ffffffffffffffff811115610ba257610ba16108d7565b5b610bae86828701610ada565b9250506040610bbf86828701610b29565b9150509250925092565b600060208284031215610bdf57610bde6108d2565b5b6000610bed84828501610b29565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c2b81610b08565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c6b578082015181840152602081019050610c50565b60008484015250505050565b6000610c8282610c31565b610c8c8185610c3c565b9350610c9c818560208601610c4d565b610ca5816108e6565b840191505092915050565b6000606083016000830151610cc86000860182610c22565b5060208301518482036020860152610ce08282610c77565b9150506040830151610cf56040860182610c22565b508091505092915050565b6000610d0c8383610cb0565b905092915050565b6000602082019050919050565b6000610d2c82610bf6565b610d368185610c01565b935083602082028501610d4885610c12565b8060005b85811015610d845784840389528151610d658582610d00565b9450610d7083610d14565b925060208a01995050600181019050610d4c565b50829750879550505050505092915050565b60006020820190508181036000830152610db08184610d21565b905092915050565b600080fd5b60008083601f840112610dd357610dd26108dc565b5b8235905067ffffffffffffffff811115610df057610def610db8565b5b602083019150836020820283011115610e0c57610e0b610a4e565b5b9250929050565b60008060208385031215610e2a57610e296108d2565b5b600083013567ffffffffffffffff811115610e4857610e476108d7565b5b610e5485828601610dbd565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8b82610e60565b9050919050565b610e9b81610e80565b8114610ea657600080fd5b50565b600081359050610eb881610e92565b92915050565b60008060408385031215610ed557610ed46108d2565b5b6000610ee385828601610ea9565b9250506020610ef485828601610b29565b9150509250929050565b60008115159050919050565b610f1381610efe565b82525050565b6000602082019050610f2e6000830184610f0a565b92915050565b600060208284031215610f4a57610f496108d2565b5b6000610f5884828501610ea9565b91505092915050565b60008060408385031215610f7857610f776108d2565b5b6000610f8685828601610b29565b9250506020610f9785828601610b29565b9150509250929050565b610faa81610e80565b82525050565b6000602082019050610fc56000830184610fa1565b92915050565b600082825260208201905092915050565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b6000611012600a83610fcb565b915061101d82610fdc565b602082019050919050565b6000602082019050818103600083015261104181611005565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061108f57607f821691505b6020821081036110a2576110a1611048565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261110a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110cd565b61111486836110cd565b95508019841693508086168417925050509392505050565b6000819050919050565b600061115161114c61114784610b08565b61112c565b610b08565b9050919050565b6000819050919050565b61116b83611136565b61117f61117782611158565b8484546110da565b825550505050565b600090565b611194611187565b61119f818484611162565b505050565b5b818110156111c3576111b860008261118c565b6001810190506111a5565b5050565b601f821115611208576111d9816110a8565b6111e2846110bd565b810160208510156111f1578190505b6112056111fd856110bd565b8301826111a4565b50505b505050565b600082821c905092915050565b600061122b6000198460080261120d565b1980831691505092915050565b6000611244838361121a565b9150826002028217905092915050565b61125d82610c31565b67ffffffffffffffff811115611276576112756108f7565b5b6112808254611077565b61128b8282856111c7565b600060209050601f8311600181146112be57600084156112ac578287015190505b6112b68582611238565b86555061131e565b601f1984166112cc866110a8565b60005b828110156112f4578489015182556001820191506020850194506020810190506112cf565b86831015611311578489015161130d601f89168261121a565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061136082610b08565b915061136b83610b08565b925082820190508082111561138357611382611326565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113c382610b08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113f5576113f4611326565b5b600182019050919050565b7f63616e6e6f7420736565207468652062616c6c6f7420726573756c742062656660008201527f6f72652062616c6c6f7420656e64000000000000000000000000000000000000602082015250565b600061145c602e83610fcb565b915061146782611400565b604082019050919050565b6000602082019050818103600083015261148b8161144f565b9050919050565b7f6f6e6c7920766f746572732063616e20766f7465000000000000000000000000600082015250565b60006114c8601483610fcb565b91506114d382611492565b602082019050919050565b600060208201905081810360008301526114f7816114bb565b9050919050565b7f766f7465722063616e206f6e6c7920766f7465206f6e63650000000000000000600082015250565b6000611534601883610fcb565b915061153f826114fe565b602082019050919050565b6000602082019050818103600083015261156381611527565b9050919050565b7f63616e206f6e6c7920766f746520756e74696c2062616c6c6f7420656e64206460008201527f6174650000000000000000000000000000000000000000000000000000000000602082015250565b60006115c6602383610fcb565b91506115d18261156a565b604082019050919050565b600060208201905081810360008301526115f5816115b9565b905091905056fea2646970667358221220ec42f02999d30ad092caa1fba7844df531973aa8b46d74b3766343d27015cdbb64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/Voting.sol:Voting",
        "label": "voters",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 28,
        "contract": "contracts/Voting.sol:Voting",
        "label": "ballots",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Ballot)23_storage)"
      },
      {
        "astId": 30,
        "contract": "contracts/Voting.sol:Voting",
        "label": "nextBallotId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 32,
        "contract": "contracts/Voting.sol:Voting",
        "label": "admin",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 38,
        "contract": "contracts/Voting.sol:Voting",
        "label": "votes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Choice)12_storage)dyn_storage": {
        "base": "t_struct(Choice)12_storage",
        "encoding": "dynamic_array",
        "label": "struct Voting.Choice[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Ballot)23_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Voting.Ballot)",
        "numberOfBytes": "32",
        "value": "t_struct(Ballot)23_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Ballot)23_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Ballot",
        "members": [
          {
            "astId": 14,
            "contract": "contracts/Voting.sol:Voting",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 16,
            "contract": "contracts/Voting.sol:Voting",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 20,
            "contract": "contracts/Voting.sol:Voting",
            "label": "choices",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(Choice)12_storage)dyn_storage"
          },
          {
            "astId": 22,
            "contract": "contracts/Voting.sol:Voting",
            "label": "end",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Choice)12_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Choice",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/Voting.sol:Voting",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9,
            "contract": "contracts/Voting.sol:Voting",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 11,
            "contract": "contracts/Voting.sol:Voting",
            "label": "votes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}